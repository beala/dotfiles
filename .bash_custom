# Include .irm an "Improved rm" command.
if [ -f ~/.irm ]; then
  . ~/.irm
fi

if [ -f ~/.bash_work ]; then
  . ~/.bash_work
fi

if [ -f ~/.bash_home ]; then
  . ~/.bash_home
fi

# Send stdin to sprunge.us (pastebin service)
pastebin() { curl --silent -F 'sprunge=<-' http://sprunge.us; }

# Create function for sharing files to S3.
share() {
    s3cmd -P put "$@" s3://share.usrsb.in
    for file in "$@"; do
        echo "http://share.usrsb.in/$file"
    done
}

rmshare() {
    for file in "$@"; do
        s3cmd del "s3://share.usrsb.in/$file"
    done
}

lsshare() {
    s3cmd ls "s3://share.usrsb.in/"
}

torrent() {
    scp "$1" raspi-local:~/torrents/
}

lstorrent() {
    ssh raspi-local "ls ~/torrents"
}

gettorrent() {
    scp -r raspi-local:~/torrents/"$1" .
}

# Aliases
alias dir-size="du -hs"
alias pgen="xkpa -nil 6 -s ''"
alias p="pushd"
alias r="popd"
alias ll="ls -Gla"
alias ls="ls -G"
alias ppj="python -mjson.tool"
alias rsrc="source ~/.bash_profile"
# Git
alias gtree="git log --graph --oneline --all"

export EDITOR=vim
export PATH="$PATH:$HOME/bin:$HOME/.local/bin"

source ~/dotfiles/git-completion.bash

# Prevent XQuartz from launching whenever I open vim.
export DISPLAY=

sping ()
{
    if [ -z "$1" ]; then
        echo "Usage: sping <hostname> [<host2> <host3>]";
        return;
    fi;
    date
    if [ "$2" ]; then
        while sleep 1; do
            host_down=false;
            for host in $@;
            do
                tcping -t 2 $host 22 || host_down="true";
            done;
            [ $host_down = true ] || {
                unset HOSTS && break
            };
        done;
    else
        while sleep 1; do
            tcping -t 2 $1 22 && break;
        done;
    fi
    date
}

deploy_tag ()
{
    APP="$1"
    if [ -z "$APP" ]; then
        echo "Please supply an app name. deploy_tag APP_NAME"
        return 1
    fi
    TAG="datadelivery-enrichments/$APP-release-$(date +%Y-%m-%d-%s)"
    git tag "$TAG" && git push origin "$TAG"
}

rm_host ()
{
    LINE="$1"
    if [ -z "$LINE" ]; then
        echo "Please supply an line number. rm_host LINE"
        return 1
    fi
    echo "Removing: $(sed -n "$LINE"p ~/.ssh/known_hosts)"
    sed -i ".bak" "$LINE"d ~/.ssh/known_hosts
}
